<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.surveyapplication.mapper.SurveyMapper">

    <insert id="saveSurvey" parameterType="com.surveyapplication.domain.Survey">
        INSERT INTO surveys (description, user_id, created_at, status)
        VALUES (#{description}, #{userId}, #{createdAt}, #{status});

        <selectKey resultType="Long" keyProperty="id" keyColumn="id" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>
    </insert>

    <insert id="saveQuestion" parameterType="com.surveyapplication.domain.Question">
        INSERT INTO questions (survey_id, description, question_type)
        VALUES (#{surveyId}, #{description}, #{type})

        <selectKey resultType="Long" keyProperty="id" keyColumn="id" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>
    </insert>

    <insert id="saveChoice" parameterType="com.surveyapplication.domain.Choice">
        INSERT INTO choices (text, question_id)
        VALUES (#{text}, #{questionId})
    </insert>

    <insert id="saveSurveyResponse" parameterType="com.surveyapplication.domain.SurveyResponse">
        INSERT INTO survey_responses (survey_id, user_id)
        VALUES (#{surveyId}, #{userId})

        <selectKey resultType="Long" keyProperty="id" keyColumn="id" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>
    </insert>

    <insert id="saveSurveyAnswer" parameterType="com.surveyapplication.domain.SurveyAnswer">
        INSERT INTO survey_answers (survey_response_id, question_id, answer)
        VALUES (#{surveyResponseId}, #{questionId}, #{answer})
    </insert>
    <update id="updateSurveyById">
        UPDATE surveys
        SET description = #{description}
        WHERE id = #{id}
    </update>
    <delete id="deleteChoiceByQuestionIds" parameterType="Long">
        DELETE FROM choices
        WHERE question_id IN
        <foreach collection="list" item="id" open="(" separator="," close=")">
                #{id}
        </foreach>
    </delete>
    <delete id="deleteQuestionsBySurveyId" parameterType="Long">
        DELETE FROM questions
        WHERE survey_id = #{surveyId}
    </delete>

    <!--    <insert id="saveQuestions" parameterType="com.surveyapplication.domain.Question">-->
    <!--        INSERT INTO questions (survey_id, description, question_type) VALUES-->
    <!--        <foreach collection="questions" item = "question" separator=",">-->
    <!--            (#{question.surveyId}, #{question.description}, #{question.type})-->
    <!--        </foreach>-->

    <!--        <selectKey resultType="Long" keyProperty="id" keyColumn="id" order="AFTER">-->
    <!--            SELECT LAST_INSERT_ID()-->
    <!--        </selectKey>-->
    <!--    </insert>-->

    <resultMap id="surveyResultMap" type="com.surveyapplication.domain.Survey">
        <id property="id" column="id"/>
        <result property="description" column="description"/>
        <result property="userId" column="user_id"/>
        <result property="status" column="status"/>
        <result property="createdAt" column="created_at"/>
    </resultMap>

    <select id="findSurveys" parameterType="Long">
        SELECT id FROM surveys
    </select>

    <select id="findSurveyById" parameterType="Long" resultMap="surveyResultMap">
        SELECT id, description, user_id, status, created_at
        FROM surveys
        WHERE id = #{surveyId}
    </select>

    <resultMap id="questionResultMap" type="com.surveyapplication.domain.Question">
        <id property="id" column="id"/>
        <result property="surveyId" column="survey_id"/>
        <result property="description" column="description"/>
        <result property="type" column="question_type"/>
    </resultMap>

    <select id="findQuestionsBySurveyId" parameterType="Long" resultMap="questionResultMap">
        SELECT id, survey_id, description, question_type
        FROM questions
        WHERE survey_id = #{surveyId}
    </select>

    <resultMap id="choiceResultMap" type="com.surveyapplication.domain.Choice">
        <id property="id" column="id"/>
        <result property="questionId" column="question_id"/>
        <result property="text" column="text"/>
    </resultMap>

        <select id="findChoicesByQuestionId" parameterType="Long" resultMap="choiceResultMap">
            SELECT * FROM choices WHERE question_id = #{questionId}
        </select>

    <select id="findChoicesByQuestionIds" parameterType="java.util.List" resultMap="choiceResultMap">
        SELECT id, question_id, text FROM choices WHERE question_id IN
        <foreach item="id" collection="list" open="(" separator="," close=")">
            #{id}
        </foreach>
    </select>

    <resultMap id="surveyResponseResultMap" type="com.surveyapplication.domain.SurveyResponse">
        <id property="id" column="id"></id>
        <result property="surveyId" column="survey_id"/>
        <result property="userId" column="user_id"/>
    </resultMap>
    <select id="findSurveyResponseBySurveyIdAndUserId" parameterType="Long" resultMap="surveyResponseResultMap">
        SELECT id, user_id, survey_id
        FROM survey_responses
        WHERE survey_id = #{surveyId} AND user_id = #{userId}
    </select>

    <resultMap id="surveyAnswerResultMap" type="com.surveyapplication.domain.SurveyAnswer">
        <id property="id" column="id"></id>
        <result property="questionId" column="question_id"/>
        <result property="answer" column="answer"/>
    </resultMap>
    <select id="findSurveyAnswersBySurveyResponseId" parameterType="Long" resultMap="surveyAnswerResultMap">
        SELECT id, question_id, answer
        FROM survey_answers
        WHERE survey_response_id = #{surveyResponseId}
    </select>


    <select id="findSurveysResults" resultMap="surveyResponseResultMap">
        SELECT id, survey_id, user_id
        FROM survey_responses
        ORDER BY id DESC
    </select>

    <select id="findChoiceAndChoicePercentageBy" parameterType="Long" resultType="com.surveyapplication.mapper.ChoiceStatisticsVO">
        SELECT
            q.id AS question_id,
            q.description AS description,
            q.question_type AS type,
            c.id AS choice_id,
            c.text AS text,
            COALESCE((COUNT(sa.id) / question_total.total_responses) * 100, 0) AS choice_percentage
        FROM
            questions q
                LEFT JOIN
            choices c ON q.id = c.question_id
                LEFT JOIN
            survey_answers sa ON c.id = sa.answer
                JOIN (
                SELECT
                    q.id AS question_id,
                    COUNT(sa.id) AS total_responses
                FROM
                    questions q
                        LEFT JOIN
                    choices c ON q.id = c.question_id
                        LEFT JOIN
                    survey_answers sa ON c.id = sa.answer
                WHERE
                    q.survey_id = #{surveyId}
                GROUP BY
                    q.id
            ) question_total ON q.id = question_total.question_id
        WHERE
            q.survey_id = #{surveyId}
        GROUP BY
            q.id, c.id
        ORDER BY c.id ASC;
    </select>
    <select id="existSurveyResponseBySurveyId" resultType="java.lang.Boolean">
        SELECT EXISTS(
            SELECT 1
            FROM survey_responses
            WHERE survey_id = #{surveyId}
            LIMIT 1
        )
    </select>
</mapper>